import asyncio
from aiogram import Bot, Dispatcher, executor, types
from aiogram.dispatcher import filters
from aiogram.types.inline_keyboard import InlineKeyboardButton, InlineKeyboardMarkup 
from utils import Db
from config import TOKEN


API_TOKEN = TOKEN
db = Db.load_db("db.json")

async def start_bot():
    bot = Bot(token=API_TOKEN)
    dp = Dispatcher(bot)
    global counter
    counter = 0
    dp.register_message_handler(
            send_an_agenda, 
            filters.RegexpCommandsFilter(regexp_commands=['naz(h)?mi_esli_(t[yi]_)?za.*'])
    )
    dp.register_message_handler(
            send_leaderboard, 
            commands=["leaderboard"]
    )
    await set_commands(bot)
    await dp.start_polling()


async def send_an_agenda(msg: types.Message) -> None:
    global counter
    counter += 1
    try:
        Db.increase_count(db, msg)
        Db.save_changes(db, "db.json")
        text = """
<strong>–ú–µ—Ä–µ–π –ê–±–¥–∏–∫–∞—Ä–∏–º</strong>, —Å—Ç—É–¥–µ–Ω—Ç–∫–∞ –≥—Ä—É–ø–ø—ã SE-2201, –±–∞–ª–ª–æ—Ç–∏—Ä—É–µ—Ç—Å—è –Ω–∞ –ø–æ—Å—Ç <strong>–ø—Ä–µ–∑–∏–¥–µ–Ω—Ç–∞ –°—Ç—É–¥–µ–Ω—á–µ—Å–∫–æ–≥–æ –ø—Ä–∞–≤–∏—Ç–µ–ª—å—Å—Ç–≤–∞.</strong> –í —Å–≤–æ–µ–π —Å—Ç—É–¥–µ–Ω—á–µ—Å–∫–æ–π –∂–∏–∑–Ω–∏ –ú–µ—Ä–µ–π –∑–∞–Ω–∏–º–∞–µ—Ç —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Ä–æ–ª–∏ ‚Äì –æ—Ç —Å—Ç–∞—Ä–æ—Å—Ç—ã –∏ –º–µ–Ω—Ç–æ—Ä–∞ –ø–µ—Ä–≤–æ–∫—É—Ä—Å–Ω–∏–∫–æ–≤ –¥–æ –∞–¥–º–∏–Ω–∞ –¢–µ–ª–µ–≥—Ä–∞–º-–∫–∞–Ω–∞–ª–æ–≤ AITU Science –∏ —á–ª–µ–Ω–∞ AITUSA.

<strong>–ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –∫–∞–Ω–∞–ª –ú–µ—Ä–µ–π and stay tuned! https://t.me/Mereysstuff</strong>
        """
        if counter == 15:
            irm = InlineKeyboardMarkup()
            irm.insert(InlineKeyboardButton(text='ü´∞–£–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ–µü´∞', url="https://t.me/Mereysstuff"))
            await msg.reply(text, parse_mode='html', reply_markup=irm)
            counter = 0
    except TypeError:
        return

async def send_leaderboard(msg: types.Message) -> None:
    try:
        chatstat = db.get(str(msg.chat.shifted_id))
        if chatstat is None:
            text = "–≤ –¥–∞–Ω–Ω–æ–º —á–∞—Ç–µ –µ—â—ë –Ω–∏–∫—Ç–æ –Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –∞–≥–∏—Ç–∞—Ü–∏—é"
            await msg.reply(text)

        text = Db.format_dict_to_leadreboard(db.get(str(msg.chat.shifted_id)), counter)

        await msg.reply(text, parse_mode='html')
    except TypeError:
        return

async def set_commands(bot: Bot):
    commands = [
            types.BotCommand(command='/leaderboard', description='—Ç–æ–ø 10 –ª—É—á—à–∏—Ö –∞–≥–∏—Ç–∞—Ç–æ—Ä–æ–≤'),
    ]
    await bot.set_my_commands(commands)

if __name__ == "__main__":
    asyncio.run(start_bot())
